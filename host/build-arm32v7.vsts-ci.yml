queue: Hosted Linux Preview
variables:
  dockerId: azurefunctions

- bash: |
    # build arm
    apt-get update
    apt-get install -y qemu-user-static qemu-user binfmt-support

    cp /usr/bin/qemu-arm-static host/2.0/stretch/arm32v7/
    cp /usr/bin/qemu-arm-static grpc/stretch/arm32v7/

    chmod 777 host/2.0/stretch/arm32v7/qemu-arm-static
    chmod 777 grpc/stretch/arm32v7/qemu-arm-static

    # register qemu-arm-static
    docker run --rm --privileged multiarch/qemu-user-static:register --reset

    docker build -t grpc-build -f grpc/stretch/arm32v7/Dockerfile grpc/stretch/arm32v7/
    docker run --rm -v /tmp/output:/output grpc-build

    images=( base node python mesh powershell )
    for i in "${images[@]}"
    do
      imageName="azure-functions/$i:$(BuildNumber)-arm32v7"

      docker build -t $imageName \
        --build-arg HOST_COMMIT=$(HostCommit) \
        --build-arg BASE_IMAGE=azure-functions/base \
        --build-arg BUILD_NUMBER=$(BuildNumber) \
        --build-arg BASE_IMAGE_TAG=$(BuildNumber)-arm32v7 \
        -f host/2.0/stretch/arm32v7/$i.Dockerfile \
        host/2.0/stretch/arm32v7/
    done

    docker tag azure-functions/base:$(BuildNumber) azure-functions/dotnet:$(BuildNumber)
  displayName: build images
  continueOnError: false

- bash: |
    # tag
    images=( base dotnet node python mesh powershell )
    for i in "${images[@]}"
    do
      imageName="azure-functions/$i:$(BuildNumber)-arm32v7"
      docker tag $imageName $(dockerId).azurecr.io/$imageName
      if [ "$(BuildNumber)" = "dev" ]; then
        docker tag $imageName $(dockerId).azurecr.io/public/$imageName
      fi
    done
  displayName: tag images
  continueOnError: false

- bash: |
    # login
    echo $pswd | docker login -u $(dockerId) --password-stdin $(dockerId).azurecr.io
  displayName: login
  continueOnError: false
  env:
    pswd: $(dockerPassword)

- bash: |
    # push
    images=( base dotnet node python mesh powershell )
    for i in "${images[@]}"
    do
      imageName="azure-functions/$i:$(BuildNumber)-arm32v7"
      docker push $(dockerId).azurecr.io/$imageName

      if [ "$(BuildNumber)" = "dev" ]; then
        docker push $(dockerId).azurecr.io/public/$imageName
      fi
    done
  displayName: push images
  continueOnError: false
