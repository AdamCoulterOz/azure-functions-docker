queue: Hosted Linux Preview
trigger: none
variables:
  dockerId: azurefunctions

steps:
- bash: |
    # login
    echo $pswd | docker login -u $(dockerId) --password-stdin $(dockerId).azurecr.io
  displayName: login
  continueOnError: false
  env:
    pswd: $(dockerPassword)

- bash: |
    # pull
    set -e
    images=( base dotnet node python powershell )
    for i in "${images[@]}"
    do
      # Pull
      docker pull $(dockerId).azurecr.io/public/azure-functions/$i:$(ReleaseVersion)
      docker pull $(dockerId).azurecr.io/public/azure-functions/$i:$(ReleaseVersion)-iot-edge

      # tag
      docker tag $(dockerId).azurecr.io/public/azure-functions/$i:$(ReleaseVersion) $(dockerId).azurecr.io/public/azure-functions/$i:2.0
      docker tag $(dockerId).azurecr.io/public/azure-functions/$i:$(ReleaseVersion) $(dockerId).azurecr.io/public/azure-functions/$i:latest
      docker tag $(dockerId).azurecr.io/public/azure-functions/$i:$(ReleaseVersion)-iot-edge $(dockerId).azurecr.io/public/azure-functions/$i:2.0-iot-edge

      # Push
      docker push $(dockerId).azurecr.io/public/azure-functions/$i:2.0
      docker push $(dockerId).azurecr.io/public/azure-functions/$i:latest
      docker push $(dockerId).azurecr.io/public/azure-functions/$i:2.0-iot-edge

      # Delete
      if [ "$i" != "base" ]; then
        docker rmi $(dockerId).azurecr.io/public/azure-functions/$i:$(ReleaseVersion)
        docker rmi $(dockerId).azurecr.io/public/azure-functions/$i:$(ReleaseVersion)-iot-edge
        docker rmi $(dockerId).azurecr.io/public/azure-functions/$i:2.0
        docker rmi $(dockerId).azurecr.io/public/azure-functions/$i:latest
        docker rmi $(dockerId).azurecr.io/public/azure-functions/$i:2.0-iot-edge
      fi
    done
  displayName: pull images
  continueOnError: false