queue: Hosted Linux Preview
variables:
  dockerId: azurefunctions

steps:
- bash: |
    # build
    set -e

    # login
    echo $pswd | docker login -u azurefunctions --password-stdin azurefunctions.azurecr.io
    images=( base dotnet node python powershell mesh )
    for i in "${images[@]}"
    do
      imageName="azurefunctions.azurecr.io/public/azure-functions/$i:$(BuildNumber)"

      if [ "$i" = "base" ]; then
        docker build --pull -t $imageName \
          --build-arg HOST_COMMIT=$(HostCommit) \
          --build-arg BUILD_NUMBER=$(BuildNumber) \
          -f host/2.0/stretch/amd64/base.Dockerfile \
          host/2.0/stretch/amd64/
      elif [ "$i" = "dotnet" ]; then
        docker tag azurefunctions.azurecr.io/public/azure-functions/base:$(BuildNumber) azurefunctions.azurecr.io/public/azure-functions/dotnet:$(BuildNumber)
      else
        if [ "$i" = "mesh" ]; then
          echo "mesh base is python"
          base=python
        else
          base=base
        fi

        docker build -t $imageName \
          --build-arg BASE_IMAGE=azurefunctions.azurecr.io/public/azure-functions/$base \
          --build-arg BASE_IMAGE_TAG=$(BuildNumber) \
          -f host/2.0/stretch/amd64/$i.Dockerfile \
          host/2.0/stretch/amd64/
      fi

      docker push $imageName
      # both base and python are used as "base" image for others. Don't delete them
      if [ "$i" != "base" ] && [ "$i" != "python" ]; then
        docker rmi $imageName
      fi

      docker system prune -f
    done
  displayName: build images
  continueOnError: false
  env:
    pswd: $(dockerPassword)


- bash: |
    # build iot-edge
    set -e

    # login
    echo $pswd | docker login -u azurefunctions --password-stdin azurefunctions.azurecr.io

    images=( base dotnet node python powershell )
    for i in "${images[@]}"
    do
      imageName="azurefunctions.azurecr.io/public/azure-functions/$i:$(BuildNumber)-iot-edge"

      if [ "$i" = "dotnet" ]; then
        docker tag azurefunctions.azurecr.io/public/azure-functions/base:$(BuildNumber)-iot-edge $imageName
      else
        docker build --pull -t $imageName \
          --build-arg BASE_IMAGE=azurefunctions.azurecr.io/public/azure-functions/$i \
          --build-arg BASE_IMAGE_TAG=$(BuildNumber) \
          -f host/2.0/stretch/amd64/iot-edge/$i.Dockerfile \
          host/2.0/stretch/amd64/iot-edge
      fi

      docker push $imageName

      if [ "$i" != "base" ]; then
        docker rmi $imageName
      fi

      docker system prune -f
    done
  displayName: build iot edge images
  continueOnError: false
  env:
    pswd: $(dockerPassword)